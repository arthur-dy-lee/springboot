<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE generatorConfiguration PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN" "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd" >
<generatorConfiguration >
    <!-- 设置mysql驱动路径 -->
    <classPathEntry location="/Users/sh07093ml/software/repo/mysql/mysql-connector-java/5.1.38/mysql-connector-java-5.1.38.jar" />

    <!-- 此处指定生成针对MyBatis3的DAO -->
    <context id="context1"  targetRuntime="MyBatis3">
        <!-- 生成的Java文件的编码 -->
        <property name="javaFileEncoding" value="UTF-8"/>
        <!-- 格式化java代码 -->
        <property name="javaFormatter" value="org.mybatis.generator.api.dom.DefaultJavaFormatter"/>
        <!-- 格式化XML代码 -->
        <property name="xmlFormatter" value="org.mybatis.generator.api.dom.DefaultXmlFormatter"/>
        <property name="beginningDelimiter" value="`"/>
        <property name="endingDelimiter" value="`"/>
        <!-- 增加Models ToStirng方法 -->
        <plugin type="org.mybatis.generator.plugins.ToStringPlugin" />
        <!-- 增加爱Models Serializable实现 -->
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin" />
        <!-- 分页插件 -->
        <!-- 在example类中增 page 属性，并在mapper.xml的查询中加入page !=null 时的查询 -->
<!--         <plugin type="org.mybatis.generator.plugins.MySQLPagerPlugin" />-->
        <!-- 在example类中增 offset和limit属性，并在mapper.xml的查询中加入limit ${offset} , ${limit} 提供在offset和limit>0时的查询 -->
<!--        <plugin type="org.mybatis.generator.plugins.MySQLPaginationPlugin2"></plugin>-->
        <!--<plugin type="com.xxg.mybatis.plugins.MySQLLimitPlugin"></plugin>-->
        <commentGenerator>
            <!-- <property name="suppressDate" value="true"/> -->
            <!-- 是否去除自动生成的注释 true：是 ： false:否 -->
            <property name="suppressAllComments" value="false"/>
        </commentGenerator>

        <!-- jdbc连接信息 -->
        <jdbcConnection driverClass="com.mysql.jdbc.Driver"  connectionURL="jdbc:mysql://127.0.0.1:3306/lee" userId="lee" password="eee" />
        <!-- 生成bean和example对象 -->
        <javaModelGenerator targetPackage="arthur.dy.lee.model" targetProject="src/main/java" />
        <!-- 生成mapper.xml类 -->
        <sqlMapGenerator targetPackage="mapping" targetProject="src/main/resources" />
        <!-- 生成DAO的类文件以及配置文件 -->
        <javaClientGenerator targetPackage="arthur.dy.lee.dao"  targetProject="src/main/java" type="XMLMAPPER" />
        <!-- 想要生成的数据库表,自动化工具会根据该表的结构生成相应的vo对象 -->
        <!-- <table schema="" 	tableName="t_activity_log" domainObjectName="ActivityLog"></table>
        <table schema="" 	tableName="sys_`tree" domainObjectName="SysTree"></table> -->

        <table schema="" 	tableName="database_source" domainObjectName="DatabaseSource">
            <generatedKey column="id" sqlStatement="JDBC"/>
        </table>
        <!--<table schema="" 	tableName="finance_tree" domainObjectName="FinanceTree"></table>-->

    </context>
</generatorConfiguration>